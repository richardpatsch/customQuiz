{"version":3,"sources":["api/quizQuestions.js","components/Question.js","components/QuestionCount.js","components/AnswerOption.js","components/Quiz.js","misc/Helper.js","components/Result.js","App.js","serviceWorker.js","index.js"],"names":["quizQuestions","question","answers","correctAnswers","Question","props","react_default","a","createElement","className","content","QuestionCount","counter","total","AnswerOption","icon","mobileIcon","result","correct","checked","go","size","color","react_media","query","minWidth","matches","type","id","questionId","answerId","value","answer","onChange","onAnswerSelected","htmlFor","Quiz","react_transition_group","component","transitionName","transitionEnterTimeout","transitionLeaveTimeout","transitionAppear","transitionAppearTimeout","key","components_QuestionCount","questionTotal","components_Question","answerOptions","map","findIndex","components_AnswerOption","selectedAnswers","includes","Button_default","variant","onClick","onSetPreviousQuestion","fullWidth","onSetNextQuestion","arraysEqual","array1","array2","length","sort","every","index","Result","console","log","questions","concat","filter","components_Quiz","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","initQuestions","currentQuestion","finished","handleAnswerSelected","bind","assertThisInitialized","setNextQuestion","setPreviousQuestion","setFinish","loadState","saveState","clearState","_this2","shuffled","shuffleQuestions","objectSpread","shuffleAnswers","i","undefined","localStorage","getItem","setState","JSON","parse","setItem","stringify","removeItem","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","_this3","updateSelectedAnswers","temp","currentCorrect","randomCorrect","qId","aId","newSelection","indexOf","item","_this4","_this5","components_Result","renderResult","renderQuiz","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2NAgbeA,EAhbO,CACtB,CACMC,SAAU,qDACVC,QAAS,CACP,aACA,oBACA,WACA,YACA,gBAEFC,eAAgB,CAAC,IAErB,CACEF,SAAU,8EACVC,QAAS,CACP,6CACA,+BACA,8CACA,2DACA,+BAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,gFACVC,QAAS,CACP,8BACA,+BACA,6BACA,wBACA,qCAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,oCACVC,QAAS,CACP,iBACA,qBACA,eACA,uBACA,oBAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,iFACVC,QAAS,CACP,iCACA,qDACA,+CACA,yCACA,wCAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,4FACVC,QAAS,CACP,sDACA,iDACA,oDACA,4DACA,wDAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,mDACVC,QAAS,CACP,WACA,WACA,WACA,aACA,YAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,iCACVC,QAAS,CACP,aACA,kBACA,YACA,MACA,mBAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,2DACVC,QAAS,CACP,mBACA,mBACA,mBACA,mBACA,oBAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,2EACVC,QAAS,CACP,aACA,eACA,qBACA,cACA,eAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,gIACVC,QAAS,CACP,iBACA,eACA,kBACA,gBACA,eAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,0FACVC,QAAS,CACP,KACA,KACA,KACA,KACA,MAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,sFACVC,QAAS,CACP,IACA,IACA,IACA,IACA,KAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,mDACVC,QAAS,CACP,KACA,KACA,KACA,IACA,MAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,oIACVC,QAAS,CACP,eACA,cACA,cACA,eACA,eAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,4DACVC,QAAS,CACP,KACA,IACA,IACA,KACA,KAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,oEACVC,QAAS,CACP,qCACA,qCACA,qCACA,qCACA,sCAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,qGACVC,QAAS,CACP,aACA,YACA,WACA,WACA,cACA,aAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,8DACVC,QAAS,CACP,IACA,IACA,IACA,IACA,KAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,wDACVC,QAAS,CACP,0CACA,0CACA,yCACA,uCAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,6EACVC,QAAS,CACP,qBACA,cACA,4BACA,wCACA,aAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,qBACVC,QAAS,CACP,WACA,KACA,OACA,IACA,WAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,qGACVC,QAAS,CACP,YACA,MACA,MACA,YAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,2CACVC,QAAS,CACP,gBACA,MACA,gBACA,OACA,iBAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,qEACVC,QAAS,CACP,aACA,cACA,QACA,cACA,cAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,8CACVC,QAAS,CACP,QACA,SACA,QACA,SACA,WAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,sDACVC,QAAS,CACP,yBACA,yBACA,yBACA,yBACA,0BAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,6DACVC,QAAS,CACP,IACA,KACA,KACA,KACA,MAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,8CACVC,QAAS,CACP,UACA,SACA,YACA,aAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,oDACVC,QAAS,CACP,sBACA,kBACA,eACA,gBACA,iBAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,uDACVC,QAAS,CACP,mBACA,mBACA,mBACA,oBAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,4DACVC,QAAS,CACP,aACA,QACA,QACA,SAEFC,eAAgB,CAAC,IAEnB,CACEF,SAAU,mIACVC,QAAS,CACP,mEACA,wEACA,wDACA,qEAEFC,eAAgB,CAAC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","file":"static/js/main.a4fca2f2.chunk.js","sourcesContent":["const quizQuestions = [\n{\n      question: \"Isotope unterscheiden sich durch die Anzahl von...\",\n      answers: [\n        \"Elektronen\", \n        \"Sauerstoff Atomen\", \n        \"Protonen\", \n        \"Neutronen\",\n        \"Kernladungen\"\n      ],\n      correctAnswers: [3]\n  },\n  {\n    question: \"Welche Formeln haben Aluminiumsulfat, Magnesiumnitrat und Perchlorsäure?\",\n    answers: [\n      \"Al(SO₂)₃, MgNO₂, HClO₄\", \n      \"AlSO₄, MgCN, HClO₄\", \n      \"Al₂(SO₃)₃, MgOCN, HClO₃\", \n      \"Al₂(SO₄)₃, Mg(NO₃)₂, HClO₄\", \n      \"AlS₄, MgCN, HClO₄\"\n    ],\n    correctAnswers: [3]\n  },\n  {\n    question: \"Wie ist das Massenwirkungsgesetz für Ni (s) + 4CO (g)  Ni (CO)₄ (g) ?\",\n    answers: [\n      \"[CO]⁴ / [Ni(CO)₂]\",\n      \"[Ni (CO)₄] / [CO]⁴\",\n      \"[Ni] [CO] / [Ni(CO)₄]\",\n      \"[CO] / [Ni(CO)₄]\",\n      \"[Ni] [CO]⁴ / [Ni (CO)₄]\"\n    ],\n    correctAnswers: [1]\n  },\n  {\n    question: \"Wie lautet die Definition von pH?\",\n    answers: [\n      \"–ln [OH-]\",\n      \"10- ^([H₃O+])\",\n      \"10- ^([OH-])\",\n      \"–ln [H₃O+]\",\n      \"-log [H₃O+]\"\n    ],\n    correctAnswers: [4]\n  },\n  {\n    question: \"Welche Formel haben Natriumhydrogensulfat, Magnesiumchromat und Essigsäure?\",\n    answers: [\n      \"NaHSO₄, MgCrO₄, HClO\",\n      \"Na₂HSO₄, Mg₂CrO₄, CH₃COOH\",\n      \"NaHSO₄, Mg₂CrO₄, CH₃COOH\",\n      \"NaHSO₄, MgCrO₄, CH₃COOH\",\n      \"Na₂HSO₄, MgCrO₄, HClO\"\n    ],\n    correctAnswers: [3]\n  },\n  {\n    question: \"Bestimmte die Lewis Formel für XeF₂ und BF₃. Was sind molekulare Geometrien?\",\n    answers: [\n      \"XeF₂ – Oktaedrisch, BF₃ Tetraedrisch\",\n      \"XeF₂ – linear, BF₃ Tetraedrisch\",\n      \"XeF₂ – linear, BF₃ Trigonal Planar\",\n      \"XeF₂ – Oktaedrisch, BF₃ Trigonal pyramidal\",\n      \"XeF₂ – Gewinkelt, BF₃ Trigonal Planar\"\n    ],\n    correctAnswers: [2]\n  },\n  {\n    question: \"Welche der folgenden Substanzen ist nicht polar?\",\n    answers: [\n      \"NH₃\",\n      \"SF₄\",\n      \"H₂O\",\n      \"CHCl₃\",\n      \"SF₆\"\n    ],\n    correctAnswers: [4]\n  },\n  {\n    question: \"Was ist keine starke Säure?\",\n    answers: [\n      \"HClO₄\",\n      \"H₃PO₄\",\n      \"HNO₃\",\n      \"HCl\",\n      \"H₂SO₄\"\n    ],\n    correctAnswers: [1]\n  },\n  {\n    question: \"Ordne nach zunehmender Ionisierungsenergie Li, Na, F, Cl\",\n    answers: [\n      \"Li < Na < Cl < F\",\n      \"Cl < F < Na < Li\",\n      \"Cl < F < Li < Na\",\n      \"Na < Li < F < Cl\",\n      \"Na < Li < Cl < F\"\n    ],\n    correctAnswers: [4]\n  },\n  {\n    question: \"Welche Art der elektromagnetischen Strahlung hat die höchste Energie?\",\n    answers: [\n      \"UV - Licht\",\n      \"blaues Licht\",\n      \"Röntgenstrahlen\",\n      \"Radiowellen\",\n      \"Mikrowellen\"\n    ],\n    correctAnswers: [2]\n  },\n  {\n    question: \"Berechne 6,022 * 10^23 * 1,55 g / 18,02 g/ mol und wähle das Ergebnis mit der richtigen Menge an signifikanten Stellen aus\",\n    answers: [\n      \"5,1799 * 10^22\",\n      \"5,18 * 10^22\",\n      \"5,17985 * 10^22\",\n      \"5,180 * 10^22\",\n      \"5,2 * 10^22\"\n    ],\n    correctAnswers: [1]\n  },\n  {\n    question: \"Welches Element hat die folgende Elektronenkonfiguration [Kr] 5s²4d¹⁰5p¹?\",\n    answers: [\n      \"Te\",\n      \"Sn\",\n      \"Sb\",\n      \"In\",\n      \"Nb\"\n    ],\n    correctAnswers: [3]\n  },\n  {\n    question: \"Was ist der Van’t Hoff Faktor bei einer Gefrierpunkts-Erniedrigungsberechnung?\",\n    answers: [\n      \"1\",\n      \"4\",\n      \"2\",\n      \"3\",\n      \"0\"\n    ],\n    correctAnswers: [3]\n  },\n  {\n    question: \"Welches Element hat 30 Neutronen und 26 Protonen\",\n    answers: [\n      \"Al\",\n      \"Zn\",\n      \"Fe\",\n      \"P\",\n      \"Ba\"\n    ],\n    correctAnswers: [2]\n  },\n  {\n    question: \"Welchen Gefrierpunkt hat eine Lösung die 139,0 g Rohrzucker (342,3 g/mol) gelöst in 500 g Wasser ist. (Egp = -1,86 °C/m)\",\n    answers: [\n      \"-0,755 °C\",\n      \"-1,51 °C\",\n      \"-1,86 °C\",\n      \"-0,378 °C\",\n      \"-3,02 °C\"\n    ],\n    correctAnswers: [1]\n  },\n  {\n    question: \"Welches Element hat eine Elektronenaffinität von Null?\",\n    answers: [\n      \"Be\",\n      \"O\",\n      \"F\",\n      \"Cl\",\n      \"C\"\n    ],\n    correctAnswers: [0]\n  },\n  {\n    question: \"Ordne nach zunehmenden Siedepunkt H₂, HCl, N₂, Cl₂\",\n    answers: [\n      \"H₂ < N₂ < Cl₂ < HCl\",\n      \"H₂ < HCl < N₂ < Cl₂\",\n      \"N₂ < Cl₂ < H₂ < HCl\",\n      \"Cl₂ < N₂ < H₂ < HCl\",\n      \"HCl < H₂ < N₂ < Cl₂\"\n    ],\n    correctAnswers: [0]\n  },\n  {\n    question: \"Bei einer Reaktion von 0,200 mol Al und 0,150 mol Cl₂ bleibt wie viel Mol Aluminium übrig?\",\n    answers: [\n      \"0,0500 mol\",\n      \"0,100 mol\",\n      \"0,00 mol\",\n      \"0,00 mol\",\n      \"0,00500 mol\",\n      \"0,150 mol\"\n    ],\n    correctAnswers: [1]\n  },\n  {\n    question: \"Wie viele signifikanten Stellen sind bei 1,01000 angegeben?\",\n    answers: [\n      \"4\",\n      \"2\",\n      \"5\",\n      \"6\",\n      \"3\"\n    ],\n    correctAnswers: [3]\n  },\n  {\n    question: \"Wie lautet die Henderson-Hasselbalch Puffergleichung?\",\n    answers: [\n      \"pH = pKs – log ([Salz]/[Säure])\",\n      \"pH = pKs – log ([Säure]/[Salz])\",\n      \"pH = Ks – log ([Salz]/[Säure])\",\n      \"pH = pKs – log ([Base]/[Salz])\"\n    ],\n    correctAnswers: [1]\n  },\n  {\n    question: \"Welche intermolekulare Kraft herrscht zwischen Sauerstoffgas Molekülen?\",\n    answers: [\n      \"Dipol – Dipol\",\n      \"Ion - Dipol\",\n      \"Dipol - Induzierter Dipol\",\n      \"Induzierter Dipol - Induzierter Dipol\",\n      \"Ion - Ion\"\n    ],\n    correctAnswers: [3]\n  },\n  {\n    question: \"Wie groß ist Kh\",\n    answers: [\n      \"10^(-14)\",\n      \"14\",\n      \"10^7\",\n      \"7\",\n      \"10^(-7)\"\n    ],\n    correctAnswers: [0]\n  },\n  {\n    question: \"Welche Substanz ist nach der Bronsted- Lowry Definition eine Base? HCl + NH₃  NH₄+ + Cl-\",\n    answers: [\n      \"NH₄+\",\n      \"Cl-\",\n      \"HCl\",\n      \"NH₃\",\n    ],\n    correctAnswers: [3]\n  },\n  {\n    question: \"Wie viel ist 0,0045 M in mol/ millimeter\",\n    answers: [\n      \"4,5 * 10^(-9)\",\n      \"4,5\",\n      \"4,5 * 10^(-6)\",\n      \"4500\",\n      \"4,5 * 10^(-3)\"\n    ],\n    correctAnswers: [2]\n  },\n  {\n    question: \"Welches Element ist im Normalzustand kein zweiatomiges Molekül?\",\n    answers: [\n      \"Sauerstoff\",\n      \"Kohlenstoff\",\n      \"Chlor\",\n      \"Wasserstoff\",\n      \"Stickstoff\"\n    ],\n    correctAnswers: [1]\n  }, \n  {\n    question: \"Welche Bindung ist am stärksten ionisch?\",\n    answers: [\n      \"K - F\",\n      \"Li - I\",\n      \"H - O\",\n      \"K - Cl\",\n      \"Na - Cl\",\n    ],\n    correctAnswers: [0]\n  }, \n  {\n    question: \"Durch welchen Prozess reagiert O₄- zu Mn²+?\",\n    answers: [\n      \"5 Elektronen Reduktion\",\n      \"3 Elektronen Reduktion\",\n      \"7 Elektronen Oxidation\", \n      \"5 Elektronen Oxidation\", \n      \"3 Elektronen Oxidation\"\n    ],\n    correctAnswers: [0]\n  }, \n  {\n    question: \"Wie ist die Oxidationszahl von Schwefel in dem Sulfat-Ion?\",\n    answers: [\n      \"0\",\n      \"4+\",\n      \"2-\",\n      \"6+\",\n      \"2+\",\n    ],\n    correctAnswers: [3]\n  }, \n  {\n    question: \"Welchen Bindungswinkel gibt es in SO₂?\",\n    answers: [\n      \"120°\",\n      \"90°\",\n      \"104,5°\",\n      \"120,9°\"\n    ],\n    correctAnswers: [0]\n  }, \n  {\n    question: \"Welche ist die konjugierte Base von CH₃COOH?\",\n    answers: [\n      \"CH₃COOH₂+\",\n      \"CH₃COOHOH-\",\n      \"CH₃COO-\",\n      \"CH₃COOH+\",\n      \"CH₃COOH-\"\n    ],\n    correctAnswers: [2]\n  }, \n  {\n    question: \"Ordne nach zunehmender Atomgröße Na, K, Mg, Ca\",\n    answers: [\n      \"Na > Ca > Mg > K\",\n      \"Ca > Na > K > Mg\",\n      \"Mg > Na > Ca > K\",\n      \"Mg > Na > K > Ca\"\n    ],\n    correctAnswers: [2]\n  }, \n  {\n    question: \"Welche der folgenden Bindungen ist am stärksten polar?\",\n    answers: [\n      \"O – H\",\n      \"F - H\",\n      \"I - H\",\n      \"N - H\"\n    ],\n    correctAnswers: [1]\n  }, \n  {\n    question: \"Welche intermolekularen Kräfte sind in NH₃ und O₂ zu erwarten und welches der Beiden hat den höheren Siedepunkt?\",\n    answers: [\n      \"NH₃: Dipol - Dipol; O₂: induziert - induziert; O₂\",\n      \"NH₃: induzierter Dipol - Dipol; O₂: Dipol - Dipol; NH₃\",\n      \"NH₃: Dipol - Dipol; O₂: Ion - Ion; NH₃\",\n      \"NH₃: Dipol - Dipol; O₂: induziert - induziert; NH₃\",\n    ],\n    correctAnswers: [3]\n  }, \n  {\n    question: \"Welches der folgenden Ionen ist paramagnetisch?\"    ,\n    answers: [\n      \"Na+\",\n      \"Ca²+\t\",\n      \"Mn²+\",\n      \"Cu+\",\n    ],\n    correctAnswers: [2]\n  }, \n  {\n    question: \"Ordne nach der Frequenz\",\n    answers: [\n      \"Mikrowelle < Radiowelle <  Infrarot < blaues Licht < rotes Licht < UV – Licht < Röntgenstrahlen < Gammastrahlen\",\n      \"Radiowelle < Mikrowelle < Infrarot < rotes Licht < blaues Licht < UV – Licht < Röntgenstrahlen < Gammastrahlen\",\n      \"Mikrowelle < Radiowelle <  Infrarot < rotes Licht < blaues Licht <  UV – Licht < Röntgenstrahlen < Gammastrahlen\",\n      \"Radiowelle < Mikrowelle < Infrarot < blaues Licht < rotes Licht  < UV – Licht < Gammastrahlen< Röntgenstrahlen\",\n    ],\n    correctAnswers: [1]\n  }, \n  {\n    question: \"Welche Formeln haben Phosphat, Perchlorat und Nitrit?\",\n    answers: [\n      \"P₄O²-, Cl²O₄-, NO₂²-\",\n      \"PO₄³ -, ClO²-, NO²-\",\n      \"PO₃²-, ClO₄-, NO²-\",\n      \"PO₄³-, ClO₄-, NO²-\",\n      \"PO³-, ClO₄-, NO₂²-\",\n    ],\n    correctAnswers: [3]\n  }, \n  {\n    question: \"Bestimmte die Lewis Formel für NH₃ HCN und SF₄ . Was sind molekulare Geometrien?\",\n    answers: [\n      \"NH₃: Wippe; HCN:  trigonal pyramidal; SF₄: linear\",\n      \"NH₃: trigonal pyramidal; HCN: Wippe; SF₄: linear\",\n      \"NH₃: trigonal pyramidal; HCN:  linear; SF₄: trigonal pyramidal\",\n      \"NH₃: trigonal pyramidal; HCN:  linear; SF₄: Wippe\"\n    ],\n    correctAnswers: [3]\n  }, \n  {\n    question: \"Welche Quantenzahlen sind nicht möglich?\",\n    answers: [\n      \"n = 3, l = 2, m = 1\",\n      \"n = 2, l = 0, m = 0\",\n      \"n = 4, l = 1, m = 1\",\n      \"n = 3, l = 4, m = 2\",\n    ],\n    correctAnswers: [3]\n  }, \n  {\n    question: \"Wie viele signifikante Stellen sind bei 0,41010 \",\n    answers: [\n      \"6\",\n      \"5\", \n      \"4\",\n      \"1\"\n    ],\n    correctAnswers: [1]\n  }, \n  {\n    question: \"Welche Formeln haben Lithiumsulfid, Calciumphosphat und Salpetersäure\",\n    answers: [\n      \"Li₂S , Ca₃(PO₄)₂, HNO₃\",\n      \"LiS , Ca₃(PO₄)₂, HNO₄\",\n      \"Li₂S₂ , Ca₃PO₄, HNO\",\n      \"Li₂S , Ca₃(PO₄)₂, HNO₃\"\n    ],\n    correctAnswers: [0]\n  }\n];\n\nexport default quizQuestions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Question = (props)  => (\n  <h2 className=\"question\">{props.content}</h2>\n);\n\nQuestion.propTypes = {\n  content: PropTypes.string.isRequired\n};\n\nexport default Question;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst QuestionCount = (props) => {\n  return (\n    <div className=\"questionCount\">\n      Question <span>{props.counter}</span> of <span>{props.total}</span>\n    </div>\n  );\n}\n\nQuestionCount.propTypes = {\n  counter: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired\n};\n\nexport default QuestionCount;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GoCheck, GoX, GoArrowRight } from 'react-icons/go';\nimport Media from \"react-media\";\n\nconst AnswerOption = (props) => {\n  let classes = \"answerOption\";\n  let icon = '';\n  let mobileIcon = '';\n\n  if (props.result) {\n    if (props.correct && props.checked) {\n      icon = <GoCheck className=\"resultStatusIcon\" size={30} color=\"green\" />;\n      mobileIcon = <GoCheck className=\"resultStatusIcon\" size={20} color=\"green\" />;\n    } else if (props.correct && !props.checked) {\n      icon = <GoArrowRight className=\"resultStatusIcon\" size={30} color=\"blue\"/>;\n      mobileIcon = <GoArrowRight className=\"resultStatusIcon\" size={20} color=\"blue\"/>;\n    } else if (!props.correct && props.checked) {\n      icon = <GoX className=\"resultStatusIcon\" size={30} color=\"red\"/>;\n      mobileIcon = <GoX className=\"resultStatusIcon\" size={20} color=\"red\"/>;\n    }\n   }\n\n  return (\n    <li className={classes}>\n      <Media query={{ minWidth: 769 }}>\n          {matches =>\n            matches ? (\n              icon\n            ) : (\n              mobileIcon\n            )\n          }\n      </Media>\n      <input\n        type=\"checkbox\"\n        className={props.result ? \"radioResultButton\" : \"radioCustomButton\"}\n        id={props.questionId + \"x\" + props.answerId}\n        checked={props.checked}\n        value={props.answer}\n        onChange={() => {props.onAnswerSelected(props.questionId, props.answerId)}}\n      />\n      <label className=\"radioCustomLabel\" htmlFor={props.questionId + \"x\" + props.answerId}>\n        {props.answer}\n      </label>\n    </li>\n  );\n}\n\nAnswerOption.propTypes = {\n  checked: PropTypes.bool.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n  answerId: PropTypes.number.isRequired,\n  questionId: PropTypes.number.isRequired,\n  result: PropTypes.bool.isRequired,\n  correct: PropTypes.bool.isRequired,\n};\n\nexport default AnswerOption;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../components/Question';\nimport QuestionCount from '../components/QuestionCount';\nimport AnswerOption from '../components/AnswerOption';\nimport Button from '@material-ui/core/Button';\n\n\nconst Quiz = (props) => {\n  const renderAnswerOptions = (key) => {\n    const answerId = props.answerOptions.findIndex(answer => answer === key);\n    return (\n      <AnswerOption\n        key={answerId + \"A\" + props.questionId}\n        answer={key}\n        checked={props.selectedAnswers.includes(answerId)}\n        answerId={answerId}\n        questionId={props.questionId}\n        onAnswerSelected={props.onAnswerSelected}\n        result={props.result}\n        correct={props.correctAnswers.includes(answerId)}\n      />\n    );\n  }\n\n\n  return (\n    <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <div key={props.questionId}>\n        {!props.result ? <QuestionCount counter={props.questionId + 1} total={props.questionTotal} /> : \"\"}\n        <Question content={props.question} />\n        <ul className=\"answerOptions\">\n          {props.answerOptions.map(renderAnswerOptions)}\n        </ul>\n      </div>\n      {\n        (!props.result) ?\n        <div id=\"test\">\n          <div className=\"split\">\n            <Button variant=\"contained\" color=\"primary\" onClick={() => props.onSetPreviousQuestion()} fullWidth>Previous</Button>\n          </div>\n          <div className=\"split\">\n            <Button variant=\"contained\" color=\"primary\" onClick={() => props.onSetNextQuestion()} fullWidth>Next</Button>\n          </div>\n        </div>\n        : ''\n      }\n\n    </CSSTransitionGroup>\n  );\n}\n\nQuiz.propTypes = {\n  selectedAnswers: PropTypes.array.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n  result: PropTypes.bool.isRequired,\n  correctAnswers: PropTypes.array.isRequired,\n};\n\nexport default Quiz;\n","const arraysEqual = (array1, array2) => {\n   return array1.length === array2.length && array1.sort().every(function(value, index) { return value === array2.sort()[index]});\n}\n\nexport { arraysEqual };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Quiz from './Quiz';\nimport { arraysEqual } from '../misc/Helper'\n\nconst Result = (props) => {\n  console.log(props.questions[0].correctAnswers);\n  console.log(props.questions[0].selectedAnswers);\n  console.log(arraysEqual(props.questions[0].correctAnswers, props.questions[0].selectedAnswers));\n  return (\n    <CSSTransitionGroup\n      className=\"container result\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <h4>{`${props.questions.filter(question => arraysEqual(question.selectedAnswers, question.correctAnswers)).length} of ${props.questions.length} questions are correct.`}</h4>\n      {\n        props.questions.map(question => (\n          <Quiz\n            key={question.id+\"Q\"}\n            questionTotal={props.questions.length}\n            answerOptions={question.answers}\n            selectedAnswers={question.selectedAnswers}\n            questionId={question.id}\n            question={question.question}\n            onAnswerSelected={() => console.log(\"not changeable in result screen\")}\n            result={true}\n            correctAnswers={question.correctAnswers}\n          />\n        ))\n      }\n    </CSSTransitionGroup>\n  );\n}\n\nResult.propTypes = {\n  questions: PropTypes.array.isRequired\n};\n\nexport default Result;\n","import React, { Component } from 'react';\nimport quizQuestions from './api/quizQuestions';\nimport Quiz from './components/Quiz';\nimport Result from './components/Result';\nimport Button from '@material-ui/core/Button';\n\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      questions: this.initQuestions(),\n      currentQuestion: 0,\n      finished: false,\n    };\n\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n    this.setNextQuestion = this.setNextQuestion.bind(this);\n    this.setPreviousQuestion = this.setPreviousQuestion.bind(this);\n    this.setFinish = this.setFinish.bind(this);\n    this.loadState = this.loadState.bind(this);\n    this.saveState = this.saveState.bind(this);\n    this.clearState = this.clearState.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadState();\n  }\n\n  initQuestions() {\n    const shuffled = this.shuffleQuestions(quizQuestions).map(question => ({...this.shuffleAnswers(question), selectedAnswers: []}));\n    let i = 0;\n    return shuffled.map(question => {\n      return {...question, id: i++};\n    });\n  } \n\n  loadState() {\n    if (localStorage.getItem('vierGewinnt') !== undefined) {\n      this.setState(JSON.parse(localStorage.getItem('vierGewinnt')));\n    }\n  }\n\n  saveState() {\n    localStorage.setItem('vierGewinnt', JSON.stringify(this.state));\n  }\n\n  clearState() {\n    localStorage.removeItem('vierGewinnt');\n    this.setState({\n      currentQuestion: 0,\n      finished: false,\n      questions: this.initQuestions()\n    });\n  }\n\n  shuffleQuestions (array) {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  handleAnswerSelected(questionId, answerId) {\n    this.setState({\n      questions: this.updateSelectedAnswers(questionId, answerId),\n    }, () => this.saveState());\n  }\n\n  shuffleAnswers(question) {\n    var currentIndex = question.answers.length,\n      temp, \n      randomIndex;\n\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      temp = question.answers[currentIndex];\n      question.answers[currentIndex] = question.answers[randomIndex];\n      question.answers[randomIndex] = temp;\n\n      const currentCorrect = question.correctAnswers.includes(currentIndex);\n      const randomCorrect = question.correctAnswers.includes(randomIndex);\n\n      if (currentCorrect !== randomCorrect) {\n        if (currentCorrect && !randomCorrect) {\n          question.correctAnswers = question.correctAnswers.filter(answer => (answer !== currentIndex)).concat(randomIndex);\n        } else {\n          question.correctAnswers = question.correctAnswers.filter(answer => (answer !== randomIndex)).concat(currentIndex);\n        }\n      }\n    }\n    \n    return question;\n  }\n\n  updateSelectedAnswers(qId, aId) {\n    return this.state.questions.map(question => {\n      if (question.id === qId) {\n        let newSelection;\n        //remove if existent:\n        if (question.selectedAnswers.indexOf(aId) >= 0) {\n          newSelection = question.selectedAnswers.filter(item => item !== aId);\n        } else { //push if non-existent\n          newSelection = question.selectedAnswers.concat(aId);\n        }\n        question.selectedAnswers = newSelection;\n      } \n      return question;\n    });\n  }\n\n  setNextQuestion() {\n    console.log(\"next\");\n    if (this.state.questions.length -1 !== this.state.currentQuestion) {\n      this.setState({currentQuestion: this.state.currentQuestion+1});\n    }\n  }\n\n  setPreviousQuestion() {\n    console.log(\"previous\");\n    if (this.state.currentQuestion > 0) {\n      this.setState({currentQuestion: this.state.currentQuestion-1});\n    }\n  }\n\n  setFinish() {\n    this.setState({finished: true});\n  }\n\n  renderQuiz() {\n    const question = this.state.questions[this.state.currentQuestion];\n    return (\n      <div>\n        <Quiz\n          questionTotal = {this.state.questions.length}\n          answerOptions={question.answers}\n          selectedAnswers={question.selectedAnswers}\n          questionId={this.state.questions.indexOf(question)}\n          question={question.question}\n          onAnswerSelected={this.handleAnswerSelected}\n          result={false}\n          correctAnswers={question.correctAnswers}\n          onSetPreviousQuestion={this.setPreviousQuestion}\n          onSetNextQuestion={this.setNextQuestion}\n        /> \n        <div className=\"finishButton\">\n          <Button variant=\"contained\" color=\"default\" fullWidth onClick={() => this.setFinish()}>Finish</Button>\n        </div>\n      </div>\n    );\n  }\n\n  renderResult() {\n    return (\n      <div>\n        <Result questions={this.state.questions} />\n        <Button variant=\"contained\" color=\"primary\" fullWidth onClick={() => this.clearState()}>Reset</Button>\n\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"App-header\">\n          <h3>ELAM Quiz</h3>\n        </div>\n        {this.state.finished ? this.renderResult() : this.renderQuiz()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}